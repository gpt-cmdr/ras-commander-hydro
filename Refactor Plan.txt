



For the production Arc Hydro RAS Commander Tools, there will be 5 file locations: 


ras_commander folder in the Scripts folder: 
C:\Program Files\ArcGIS\Pro\Resources\ArcToolBox\Scripts\ras_commander
One .py script per toolbox is preferred.  

Toolbox Location:
C:\Program Files\ArcGIS\Pro\Resources\ArcToolBox\toolboxes\Arc Hydro RAS Commander.tbx
There will be one toolbox with all of Arc Hydro RAS Commander Tools stored in one file: 

Layers (.lyrx) Location:
C:\Program Files\ArcGIS\Pro\Resources\ArcToolBox\Templates\Layers\archydro\ras-commander
This subfolder will hold any layer files

Images (.png) Location: 
C:\Program Files\ArcGIS\Pro\Resources\ArcToolBox\Images
Use sparingly, only for CLB Engineering Logo

Geodatabase Schemas: 
C:\Program Files\ArcGIS\Pro\Resources\ArcToolBox\Data\archydro\Ras2DTemplate.gdb




In the Github, there will be a 5 subfolders that will mirror the "ArcToolbox" folder, which will be used for deployments.  Only these folders are included in deployments, other folders will exist in the GitHub.   The folders being synced (at build time by ESRI and by the installation powershell scripts for development testing, or running directly out of the github folder for branch testing).  The folders and files that are mirrored for production are as follows: 


ras_commander folder in the Scripts folder: 
Scripts\ras_commander
This folder contains all of the .py files referenced by the toolbox

Toolbox Location:
toolboxes\Arc Hydro RAS Commander.pyt
toolboxes\Arc Hydro RAS Commander.aprx (future effort, for production)

Layers (.lyrx) Location:
Templates\Layers\archydro\ras-commander\
This folder contains any layer files needed for styling

Images (.png) Location: 
Images
RAS-Commander SVG logo 

Geodatabase Schemas: 
Data\archydro\Ras2DTemplate.gdb


In the future I will also need an .atbx file that will be for production use, which imports the classes of my .pyt and presents an .atbx for ArcGIS to ingest as part of it's system toolboxes.  

Also, there needs to be a install_toolbox.py script that will allow me to install the toolbox locally for development purposes.  It should overwrite the existing files in each folder with the files from the selected subfolders above.


Using this scheme, these folders can be directly included/merged at production, or for production testing, or local branch testing from the github repo folder.  Relative folder references should be used throughout. 



the .ai_tools folder is a utility folder for summarizing repostiories.  Ignore it for most purposes.  




